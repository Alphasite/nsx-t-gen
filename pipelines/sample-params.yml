vcenter_host: vcsa-01.corp.local.io
vcenter_usr: administrator@vsphere.local
vcenter_pwd: 39adladfasdfl!
vcenter_datacenter: Datacenter
vcenter_datastore: Datastore
vcenter_cluster: Cluster
vcenter_manager: vcenter-1
ntpservers: 10.13.12.2
mgmt_portgroup: 'VM Network'
dnsserver: 10.13.12.2
dnsdomain: corp.local.io
defaultgateway: 10.13.12.1
netmask: 255.255.255.0

# Download NSX-T 2.1 bits from
# https://my.vmware.com/group/vmware/details?downloadGroup=NSX-T-210&productId=673
# Host a Webserver to serve the ova images and ovftool
# Please edit the endpoint and the file names
nsx_image_webserver: http://10.85.24.5:9080/
nsx_mgr_ova: nsx-unified-appliance-2.1.0.0.0.7395503.ova  
nsx_controller_ova: nsx-controller-2.1.0.0.0.7395493.ova  
nsx_edge_ova: nsx-edge-2.1.0.0.0.7395502.ova  
ovftool_image: VMware-ovftool-4.2.0-5965791-lin.x86_64.bundle

# Should nsx-t have vmotion enabled?
support_nsx_vmotion: false
# If support nsx vmotion, then ensure values are filled for following params
vlan_mgmt:
vlan_vmotion:
vlan_vsan:

# Specify passwd of the esxi hosts that should be used for nsx-t
esxi_hosts_root_pwd: rootPasswd  # Root password for the esxi hosts

# Specify FQDN, ip (and passwd if they are different) for each of the esxi hosts that should be used for nsx-t
esxi_hosts_config: |
  esxi_hosts:
  - name: esxi-host1.corp.local.io
    ip: 10.13.12.10
    root_pwd: rootPasswd 
# - name: esxi-host2.corp.local.io
#   ip: 10.13.12.11
#   root_pwd: rootPasswd 

nsx_t_manager_fqdn: nsx-t-mgr.corp.local.io
nsx_t_manager_vm_name: 'NSX-T Mgr'
nsx_t_manager_ip: 10.13.12.50
nsx_t_manager_admin_user: admin
nsx_t_manager_admin_pwd: VMware1!
nsx_t_manager_root_pwd: VMware1!
nsx_t_controller_host_prefix: nsx-t-ctl # Generated controller would be nsx-t-ctrl-1.corp.local.io,...
nsx_t_controller_vm_name_prefix: 'NSX-T Controller' # Generated edge host name would be "NSX-T Controller-1"
nsx_t_controller_ips: 10.13.12.51,10.13.12.52,10.13.12.53 # Should be 1 or 3 ips to maintain quorum for Controller Cluster
nsx_t_controller_root_pwd: VMware1!
nsx_t_controller_cluster_pwd: VMware1!
nsx_t_edge_host_prefix: nsx-t-edge # Generated edge would be nsx-t-edge-1.corp.local.io,...
nsx_t_edge_vm_name_prefix: 'NSX-T Edge' # Generated edge host name would be "NSX-T Edge-1"
nsx_t_edge_ips: 10.13.12.54,10.13.12.55
nsx_t_edge_root_pwd: VMware1!
nsx_t_edge_portgroup_ext: vlan3032 # For external routing
nsx_t_edge_portgroup_transport: vlan3127 # For TEP/overlay

# Edge network interfaces
# Network1 and Network4 are for mgmt and not used for uplink
# Network2 is for external uplink
# Network3 is for overlay
# Change only if necessary
nsx_t_edge_overlay_interface: fp-eth1 # Wired to Network3
nsx_t_edge_uplink_interface: fp-eth0  # Wired to Network2

nsx_t_tep_pool_name: tep-ip-pool
nsx_t_tep_pool_cidr: 192.168.213.0/24
nsx_t_tep_pool_gateway: 192.168.213.1
nsx_t_tep_pool_start: 192.168.213.10
nsx_t_tep_pool_end: 192.168.213.200
nsx_t_tep_pool_nameserver: 192.168.213.2

nsx_t_sizing_spec: |
  nsx_t_sizing:
    mgr:
      cpu: 2
      memory: 8192 # in MB, needs to be multiples of 1024
    controller:
      cpu: 2
      memory: 8192 # in MB, needs to be multiples of 1024
    edge:
      cpu: 2
      memory: 8192


nsx_t_overlay_hostswitch: overlay-hostswitch
nsx_t_vlan_hostswitch: vlan-hostswitch

# For Edge External uplink
nsx_t_transport_vlan: 3032

nsx_t_vlan_transport_zone: ESXi-MGMT-TZ
nsx_t_overlay_transport_zone: overlay-tz

nsx_t_pas_ncp_cluster_tag: pcf2.0

nsx_t_edge_cluster: 'Edge Cluster'

# For outbound uplink connection used by Edge
nsx_t_single_uplink_profile_name: "single-uplink-profile"
nsx_t_single_uplink_profile_mtu: 1600 # Min 1600
nsx_t_single_uplink_profile_vlan: 0 # Default

# For internal overlay connection used by Edge & Esxi hosts
nsx_t_overlay_profile_name: "host-overlay-profile"
nsx_t_overlay_profile_mtu: 1600 # Min 1600
nsx_t_overlay_profile_vlan: 3127

# Specify vmnic on esxi host to be used for nsx-t
# can be multiple vmnics separated by comma
nsx_t_esxi_vmnics: vmnic1 # vmnic1,vmnic2...

# Configs for single T0Router (only one per run), T1Routers, Logical switches and tags...
nsx_t_t0router_name: DefaultT0Router
nsx_t_t0router_ha_mode: ACTIVE_STANDBY

# Additional configs for T0Router (only one per run), T1Routers, Logical switches and tags...
nsx_t_t0router_spec: |
  t0_router:
    name: DefaultT0Router
    edge_index: nsx-t-edge-01
    ha_mode: 'ACTIVE_STANDBY'
    ip1: 10.13.12.101/27
    ip2: 10.13.12.102/27
    vip: 10.13.12.103/27
    vlan_uplink: 3032
    static_route:
      next_hop: 10.13.12.1
      network: 0.0.0.0/0
      admin_distance: 1

# T1 Logical Router with associated logical switches
nsx_t_t1router_logical_switches_spec: |
  t1_routers:
  - name: T1Router-Mgmt
    switches:
    - name: InfraLogicalSwitch
      subnet_ip: 192.168.10.1 # Last octet should be 1 rather than 0
      subnet_mask: 26
  - name: T1Router-PAS
    switches:
    - name: PASDeployment
      subnet_ip: 192.168.20.1 # Last octet should be 1 rather than 0
      subnet_mask: 22
    - name: PASServices
      subnet_ip: 192.168.24.1 # Last octet should be 1 rather than 0
      subnet_mask: 26
    - name: PASDynamicServices
      subnet_ip: 192.168.28.1 # Last octet should be 1 rather than 0
      subnet_mask: 22
  - name: T1Router-PKS
    switches:
    - name: PKSServicesLogicalSwitch
      subnet_ip: 192.168.40.1 # Last octet should be 1 rather than 0
      subnet_mask: 22

nsx_t_ha_switching_profile: HASwitchingProfile

nsx_t_container_ip_block_name: container-ip-block
nsx_t_container_ip_block_cidr: 10.4.0.0/16

# nsx_t_container_ip_block_spec: |
#   container_ip_blocks:
#   - name: container-ip-block
#     cidr: 10.100.0.0/16    
 

nsx_t_external_ip_pool_spec: |
  external_ip_pools:
  - name: external-ip-pool1
    cidr: 10.100.0.0/24
    gateway: 10.100.0.1
    start: 10.100.0.10 # Should not include gateway
    end: 10.100.0.200  # Should not include gateway

enable_ansible_debug: false # set value to true for verbose output from ansible